/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DayPanel.java
 *
 * Created on 27-Nov-2012, 22:28:16
 */
package is3calendar2;

import calendarCode.Appointment;
import calendarCode.CalendarDate;
import calendarCode.CalendarEx;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author hector
 */
public class WeekPanel extends javax.swing.JPanel {

    private CalendarEx cal;
    private CalendarDate day;
    private CalendarDate startDay;
    private CalendarDate endDay;
    private int category;
    private MainFrame mainF;

    /**
     * Creates new form DayPanel
     */
    public WeekPanel(MainFrame mf, CalendarEx calendar, CalendarDate curDay) {
        initComponents();
        cal = calendar;
        day = curDay;
        populateTable();
        mainF = mf;

        weekTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int selectedCol = weekTable.getSelectedColumn();
                    if (selectedCol != 0) {
                        day = CalendarDate.moveDay(selectedCol - 1, startDay);
                        mainF.dayRepaint();
                    }
                }
            }
        });
        weekTable.getTableHeader().setPreferredSize(new Dimension(weekTable.getTableHeader().getHeight(), 27));
    }

    public void setCategory(int i) {
        category = i;
    }

    public void populateTable() {
        startEndDay();
        for (int i = 0; i < 24; i++) {
            if (i < 10) {
                weekTable.getModel().setValueAt("0" + i + ":00", i, 0);
            } else {
                weekTable.getModel().setValueAt(i + ":00", i, 0);
            }
        }
        for (int i = 1; i < 8; i++) {
            for (int j = 0; j < 24; j++) {
                weekTable.getModel().setValueAt("", j, i);
            }
            List<Appointment> appointments = cal.getAppointmentsBetweenDates(CalendarDate.moveDay(i - 1, startDay), CalendarDate.moveDay(i - 1, startDay));
            if (category != 0) {
                List<Appointment> appointments2 = new ArrayList<Appointment>();
                for (Appointment a : appointments) {
                    if (a.category == category) {
                        appointments2.add(a);
                    }
                }
                appointments = appointments2;
            }
            for (Appointment a : appointments) {
                for (int j = 0; j < 24; j++) {
                    if (a.start_time.hr == j) {
                        weekTable.getModel().setValueAt(a.description, j, i);
                    }

                }
            }
        }
        weekTable.setShowGrid(true);
    }

    public CalendarDate getCurrentDate() {
        return day;
    }

    public void setCurrentDate(CalendarDate d) {
        day = d;
    }

    private void startEndDay() {
        int dayNum = CalendarEx.convertDay(CalendarDate.getDay(day.day, day.month, day.year));
        startDay = CalendarDate.moveDay(-dayNum + 1, new CalendarDate(day.day, day.month, day.year));
        endDay = CalendarDate.moveDay(-dayNum + 7, new CalendarDate(day.day, day.month, day.year));
        weekLabel.setText(startDay.toString() + " - " + endDay.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        weekLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        weekTable = new javax.swing.JTable();

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        weekLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weekLabel.setText("Week");

        weekTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        weekTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(weekTable);
        weekTable.setShowGrid(true);
        weekTable.setGridColor(Color.gray);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previousButton)
                        .addGap(18, 18, 18)
                        .addComponent(weekLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(nextButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                        .addGap(9, 9, 9))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nextButton, previousButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousButton)
                    .addComponent(nextButton)
                    .addComponent(weekLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addContainerGap())
        );

        weekLabel.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
    day = CalendarDate.moveWeek(-1, day);
    populateTable();
}//GEN-LAST:event_previousButtonActionPerformed

private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
    day = CalendarDate.moveWeek(1, day);
    populateTable();
}//GEN-LAST:event_nextButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JLabel weekLabel;
    private javax.swing.JTable weekTable;
    // End of variables declaration//GEN-END:variables
}
